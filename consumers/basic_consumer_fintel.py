"""
basic_consumer_fintel.py

Read a log file as it is being written. 
"""

#####################################
# Import Modules
#####################################

# Import packages from Python Standard Library
import os
import time

# Import functions from local modules
from utils.utils_logger import logger, get_log_file_path

#####################################
# Define a function to process a single message
# #####################################

def process_message(log_file) -> None:
    with open(log_file, "r") as file:
        file.seek(0, os.SEEK_END)
        print("Consumer is ready and waiting for a new log message...")

        while True:
            line = file.readline()
            if not line:
                time.sleep(1)
                continue

            message = line.strip()
            print(f"Consumed log message: {message}")

            if "I just saw a Rube Goldberg machine! It was delicious." in message:
                print(f"ALERT: A special message was identified! \n{message}")
                logger.warning(f"ALERT: A special message was identified! \n{message}")
                # Stop consumer immediately
                sys.exit(0)


#####################################
# Define main function for this script.
#####################################


def main() -> None:
    """Main entry point."""

    logger.info("STARTING PROGRAM...")

    # Call the function we imported from utils/utils_logger module
    # to get the path to the log file being generated by the producer.
    # Assign the return value to a local variable.
    log_file_path = get_log_file_path()
    logger.info(f"Reading file located at {log_file_path}.")

    try:
        # Try to call the process_message function with the log file path
        # as an argument. We know things will go wrong
        # eventually when the user stops the process, so we use a try block.
        process_message(log_file_path)

    except KeyboardInterrupt:
        print("User has stopped the process.")

    logger.info("ENDING PROGRAM.....")


#####################################
# Conditional Execution
#####################################

# If this file is the one being executed, call the main() function
if __name__ == "__main__":
    main()
